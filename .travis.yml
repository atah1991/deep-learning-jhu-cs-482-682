language: python
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.6"

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n dl-jhu-env python=$TRAVIS_PYTHON_VERSION pip numpy chainer torchvision=0.2.0 tensorflow-tensorboard tqdm pytorch-cpu=0.3.1 torchvision -c pytorch
  # some stuff is pip other things are conda, see https://github.com/ContinuumIO/anaconda-issues/issues/1429
  - source activate dl-jhu-env
  - which python
  - conda list
  - pip install --upgrade pytest flake8 tensorboardX onnx pycodestyle
  # - python setup.py install

before_script:
  - pycodestyle --max-line-length=160 --ignore=E121,E123,E126,E226,E24,E704,W503,W504,W605 p03_layers.py p03_layers_tests.py
script:
  - py.test p02_fashion_mnist_tests.py
  - py.test p03_layers_tests.py
  # The actual training tests are disabled for the duration of the assignment
  # to reduce travis runtime due to processing limitation
  # - python p02_fashion_mnist.py --dataset fashion_mnist --epochs 1 --batch-size 2048
  # - python p03_layers.py --dataset mnist --epochs 1 --batch-size 2048
